#!/bin/bash
# read indiserver values in a loop and send them to a MQTT broker
# 10.11.2021 antrares/HGZ

# usage: ./rt_indi_to_mqtt <DELAY>
# with the optional argument DELAY: waiting time BEFORE each measurement in s

DELAY=1.0

mqtt_host="antrares.tk"
mqtt_port="43580"
mqtt_id="STW-RT300-Indi"
mqtt_topic="STW/RT300/INDI/status"

indi_props=(
"Pi Radiotelescope.CONNECTION.CONNECT"
"Pi Radiotelescope.TELESCOPE_TRACK_STATE.TRACK_ON"
"Pi Radiotelescope.TELESCOPE_PARK.PARK"
"Pi Radiotelescope.TELESCOPE_PARK.UNPARK"
"Pi Radiotelescope.GPIO_OUTPUTS.GPIO_OUT0"
"Pi Radiotelescope.MEASUREMENTS.MEASUREMENT0"
"Pi Radiotelescope.INT_TIME.TIME"
"Pi Radiotelescope.HORIZONTAL_EOD_COORD.AZ"
"Pi Radiotelescope.HORIZONTAL_EOD_COORD.ALT"
"Pi Radiotelescope.EQUATORIAL_EOD_COORD.RA"
"Pi Radiotelescope.EQUATORIAL_EOD_COORD.DEC"
"Pi Radiotelescope.TIME_UTC.UTC"
"Pi Radiotelescope.GEOGRAPHIC_COORD.LAT"
"Pi Radiotelescope.GEOGRAPHIC_COORD.LONG"
"Pi Radiotelescope.GEOGRAPHIC_COORD.ELEV"
"Pi Radiotelescope.DRIVER_UPTIME.UPTIME"
"Pi Radiotelescope.TELESCOPE_SLEW_RATE.1x"
"Pi Radiotelescope.TELESCOPE_SLEW_RATE.2x"
"Pi Radiotelescope.TELESCOPE_SLEW_RATE.3x"
"Pi Radiotelescope.TELESCOPE_SLEW_RATE.4x"
"Pi Radiotelescope.TELESCOPE_SLEW_RATE.5x"
"Pi Radiotelescope.SCOPE_STATUS.SCOPE_IDLE"
"Pi Radiotelescope.SCOPE_STATUS.SCOPE_SLEWING"
"Pi Radiotelescope.SCOPE_STATUS.SCOPE_TRACKING"
"Pi Radiotelescope.SCOPE_STATUS.SCOPE_PARKING"
"Pi Radiotelescope.SCOPE_STATUS.SCOPE_PARKED"
"Pi Radiotelescope.AZ_ENC.AZ_ENC_ERR"
"Pi Radiotelescope.EL_ENC.EL_ENC_ERR"
"Pi Radiotelescope.AXIS_ABSOLUTE_TURNS.AZ_AXIS_TURNS"
"Pi Radiotelescope.AXIS_ABSOLUTE_TURNS.ALT_AXIS_TURNS"
"Pi Radiotelescope.MOTOR_STATUS.AZ_MOTOR_SPEED"
"Pi Radiotelescope.MOTOR_STATUS.ALT_MOTOR_SPEED"
"Pi Radiotelescope.MOTOR_CURRENT.AZ_MOTOR_CURRENT"
"Pi Radiotelescope.MOTOR_CURRENT.ALT_MOTOR_CURRENT"
"Pi Radiotelescope.VOLTAGE_MONITOR.VOLTAGE0"
"Pi Radiotelescope.VOLTAGE_MONITOR.VOLTAGE1"
"Pi Radiotelescope.VOLTAGE_MONITOR.VOLTAGE2"
"Pi Radiotelescope.VOLTAGE_MONITOR.VOLTAGE3"
"Pi Radiotelescope.TEMPERATURE_MONITOR.TEMPERATURE0"
"Pi Radiotelescope.TEMPERATURE_MONITOR.TEMPERATURE1"
"Pi Radiotelescope.TEMPERATURE_MONITOR.TEMPERATURE2"
"Weather Watcher.WEATHER_OVERRIDE.OVERRIDE"
"Weather Watcher.WEATHER_STATUS.WEATHER_WIND_SPEED"
"Weather Watcher.WEATHER_STATUS.WEATHER_HUMIDITY"
"Weather Watcher.WEATHER_STATUS.WEATHER_RAIN_HOUR"
"Weather Watcher.WEATHER_STATUS.WEATHER_PRESSURE"
"Weather Watcher.WEATHER_STATUS.WEATHER_TEMPERATURE"
"Weather Watcher.WEATHER_PARAMETERS.WEATHER_WIND_SPEED"
"Weather Watcher.WEATHER_PARAMETERS.WEATHER_HUMIDITY"
"Weather Watcher.WEATHER_PARAMETERS.WEATHER_RAIN_HOUR"
"Weather Watcher.WEATHER_PARAMETERS.WEATHER_PRESSURE"
"Weather Watcher.WEATHER_PARAMETERS.WEATHER_TEMPERATURE"
)

while :
do

sleep $DELAY

indi_msg=$(indi_getprop -t 1 -1 "${indi_props[@]}" 2>/dev/null)

while read line; do
propandvalue=${line#*.}
prop=${propandvalue%%=*}
value=${propandvalue##*=}

if [[ $prop == "CONNECTION.CONNECT" ]]; then
	if [[ $value == "On" ]]; then
	rt_connection=1
	else
	rt_connection=0
	fi
fi
if [[ $prop == "TELESCOPE_TRACK_STATE.TRACK_ON" ]]; then
	if [[ $value == "On" ]]; then
	rt_trackstate=1
	else
	rt_trackstate=0
	fi
fi
if [[ $prop == "TELESCOPE_PARK.PARK" ]]; then
	if [[ $value == "On" ]]; then
	rt_park=1
	fi
fi
if [[ $prop == "TELESCOPE_PARK.UNPARK" ]]; then
	if [[ $value == "On" ]]; then
	rt_park=0
	fi
fi
if [[ $prop == "GPIO_OUTPUTS.GPIO_OUT0" ]]; then
	if [[ $value == "On" ]]; then
	rt_gpio0=1
	else
	rt_gpio0=0
	fi
fi
if [[ $prop == "MEASUREMENTS.MEASUREMENT0" ]]; then
	rt_adc0=$(printf "%1.3f" $value)
fi
if [[ $prop == "INT_TIME.TIME" ]]; then
	rt_inttime=$value
fi
if [[ $prop == "HORIZONTAL_EOD_COORD.AZ" ]]; then
	rt_az=$(echo $value | awk '{ x=strtonum($(NF)); d=int(x); m=int((x-d)*60); s=int(((x-d)*60-m)*60); printf "%3d:%02d:%02d", d, m, s }')
fi
if [[ $prop == "HORIZONTAL_EOD_COORD.ALT" ]]; then
	rt_alt=$(echo $value | awk '{ x=strtonum($(NF)); d=int(x); m=sqrt(int((x-d)*60)^2); s=int((sqrt((x-d)^2)*60-m)*60); printf "%+2.0f:%02d:%02d", d, m, s }')
fi
if [[ $prop == "EQUATORIAL_EOD_COORD.RA" ]]; then
	rt_ra=$(echo $value | awk '{ x=strtonum($(NF)); h=int(x); m=int((x-h)*60); s=int(((x-h)*60-m)*60) ; printf "%2d:%02d:%02d", h, m, s }')
fi
if [[ $prop == "EQUATORIAL_EOD_COORD.DEC" ]]; then
	rt_dec=$(echo $value | awk '{ x=strtonum($(NF)); d=int(x); m=sqrt(int((x-d)*60)^2); s=int((sqrt((x-d)^2)*60-m)*60); printf "%+2.0f:%02d:%02d", d, m, s }')
fi
if [[ $prop == "TIME_UTC.UTC" ]]; then
	rt_time=${value##* }
	rt_date=${value%% *}
fi
if [[ $prop == "GEOGRAPHIC_COORD.LAT" ]]; then
	rt_lat=$(echo $value | awk '{ x=strtonum($(NF)); d=int(x); m=sqrt(int((x-d)*60)^2); s=int((sqrt((x-d)^2)*60-m)*60); printf "%+2.0f:%02d:%02d", d, m, s }')
fi
if [[ $prop == "GEOGRAPHIC_COORD.LONG" ]]; then
	rt_long=$(echo $value | awk '{ x=strtonum($(NF)); d=int(x); m=sqrt(int((x-d)*60)^2); s=int((sqrt((x-d)^2)*60-m)*60); printf "%+3.0f:%02d:%02d", d, m, s }')
fi
if [[ $prop == "GEOGRAPHIC_COORD.ELEV" ]]; then
	rt_height=$(printf "%1.1f" $value)
fi
if [[ $prop == "DRIVER_UPTIME.UPTIME" ]]; then
	rt_uptime=$(printf "%1.2f" $value)
fi
if [[ $prop == "TELESCOPE_SLEW_RATE.1x" ]]; then
	if [[ $value == "On" ]]; then
	rt_slewrate=1
	fi
fi
if [[ $prop == "TELESCOPE_SLEW_RATE.2x" ]]; then
	if [[ $value == "On" ]]; then
	rt_slewrate=2
	fi
fi
if [[ $prop == "TELESCOPE_SLEW_RATE.3x" ]]; then
	if [[ $value == "On" ]]; then
	rt_slewrate=3
	fi
fi
if [[ $prop == "TELESCOPE_SLEW_RATE.4x" ]]; then
	if [[ $value == "On" ]]; then
	rt_slewrate=4
	fi
fi
if [[ $prop == "TELESCOPE_SLEW_RATE.5x" ]]; then
	if [[ $value == "On" ]]; then
	rt_slewrate=5
	fi
fi
if [[ $prop == "SCOPE_STATUS.SCOPE_IDLE" ]]; then
	if [[ $value == "Ok" ]]; then
	rt_status="Idle"
	fi
fi
if [[ $prop == "SCOPE_STATUS.SCOPE_SLEWING" ]]; then
	if [[ $value == "Ok" ]]; then
	rt_status="Slewing"
	fi
fi
if [[ $prop == "SCOPE_STATUS.SCOPE_TRACKING" ]]; then
	if [[ $value == "Ok" ]]; then
	rt_status="Tracking"
	fi
fi
if [[ $prop == "SCOPE_STATUS.SCOPE_PARKING" ]]; then
	if [[ $value == "Ok" ]]; then
	rt_status="Parking"
	fi
fi
if [[ $prop == "SCOPE_STATUS.SCOPE_PARKED" ]]; then
	if [[ $value == "Ok" ]]; then
	rt_status="Parked"
	fi
fi
if [[ $prop == "AZ_ENC.AZ_ENC_ERR" ]]; then
	rt_encerraz=$value
fi
if [[ $prop == "EL_ENC.EL_ENC_ERR" ]]; then
	rt_encerralt=$value
fi
if [[ $prop == "AXIS_ABSOLUTE_TURNS.AZ_AXIS_TURNS" ]]; then
	rt_turnsaz=$(printf "%1.2f" $value)
fi
if [[ $prop == "AXIS_ABSOLUTE_TURNS.ALT_AXIS_TURNS" ]]; then
	rt_turnsalt=$(printf "%1.2f" $value)
fi
if [[ $prop == "MOTOR_STATUS.AZ_MOTOR_SPEED" ]]; then
	rt_mspeedaz=$(printf "%1.0f" $value)
fi
if [[ $prop == "MOTOR_STATUS.ALT_MOTOR_SPEED" ]]; then
	rt_mspeedalt=$(printf "%1.0f" $value)
fi
if [[ $prop == "MOTOR_CURRENT.AZ_MOTOR_CURRENT" ]]; then
	rt_mcurrentaz=$(printf "%1.2f" $value)
fi
if [[ $prop == "MOTOR_CURRENT.ALT_MOTOR_CURRENT" ]]; then
	rt_mcurrentalt=$(printf "%1.2f" $value)
fi
if [[ $prop == "VOLTAGE_MONITOR.VOLTAGE0" ]]; then
	rt_voltage0=$(printf "%2.2f" $value)
fi
if [[ $prop == "VOLTAGE_MONITOR.VOLTAGE1" ]]; then
	rt_voltage1=$(printf "%2.2f" $value)
fi
if [[ $prop == "VOLTAGE_MONITOR.VOLTAGE2" ]]; then
	rt_voltage2=$(printf "%2.2f" $value)
fi
if [[ $prop == "VOLTAGE_MONITOR.VOLTAGE3" ]]; then
	rt_voltage3=$(printf "%2.2f" $value)
fi
if [[ $prop == "TEMPERATURE_MONITOR.TEMPERATURE0" ]]; then
	rt_temp0=$(printf "%2.2f" $value)
fi
if [[ $prop == "TEMPERATURE_MONITOR.TEMPERATURE1" ]]; then
	rt_temp1=$(printf "%2.2f" $value)
fi
if [[ $prop == "TEMPERATURE_MONITOR.TEMPERATURE2" ]]; then
	rt_temp2=$(printf "%2.2f" $value)
fi
if [[ $prop == "WEATHER_OVERRIDE.OVERRIDE" ]]; then
	if [[ $value == "On" ]]; then
	weather_override=1
	else
	weather_override=0
	fi
fi
if [[ $prop == "WEATHER_STATUS.WEATHER_WIND_SPEED" ]]; then
	case $value in
	"Ok") weather_windstatus=0 ;;
	"Busy") weather_windstatus=1 ;;
	"Alert") weather_windstatus=2 ;;
	esac
fi
if [[ $prop == "WEATHER_STATUS.WEATHER_HUMIDITY" ]]; then
	case $value in
	"Ok") weather_humstatus=0 ;;
	"Busy") weather_humstatus=1 ;;
	"Alert") weather_humstatus=2 ;;
	esac
fi
if [[ $prop == "WEATHER_STATUS.WEATHER_RAIN_HOUR" ]]; then
	case $value in
	"Ok") weather_rainstatus=0 ;;
	"Busy") weather_rainstatus=1 ;;
	"Alert") weather_rainstatus=2 ;;
	esac
fi
if [[ $prop == "WEATHER_STATUS.WEATHER_PRESSURE" ]]; then
	case $value in
	"Ok") weather_pressstatus=0 ;;
	"Busy") weather_pressstatus=1 ;;
	"Alert") weather_pressstatus=2 ;;
	esac
fi
if [[ $prop == "WEATHER_STATUS.WEATHER_TEMPERATURE" ]]; then
	case $value in
	"Ok") weather_tempstatus=0 ;;
	"Busy") weather_tempstatus=1 ;;
	"Alert") weather_tempstatus=2 ;;
	esac
fi
if [[ $prop == "WEATHER_PARAMETERS.WEATHER_WIND_SPEED" ]]; then
	weather_wind=$(printf "%3.2f" $value)
fi
if [[ $prop == "WEATHER_PARAMETERS.WEATHER_HUMIDITY" ]]; then
	weather_hum=$(printf "%3.2f" $value)
fi
if [[ $prop == "WEATHER_PARAMETERS.WEATHER_RAIN_HOUR" ]]; then
	weather_rain=$(printf "%3.2f" $value)
fi
if [[ $prop == "WEATHER_PARAMETERS.WEATHER_PRESSURE" ]]; then
	weather_press=$(printf "%4.2f" $value)
fi
if [[ $prop == "WEATHER_PARAMETERS.WEATHER_TEMPERATURE" ]]; then
	weather_temp=$(printf "%2.2f" $value)
fi

done < <(echo "$indi_msg")

mqtt_props=(
"$rt_connection |"
"$rt_trackstate |"
"$rt_park |"
"$rt_gpio0 |"
"$rt_adc0 |"
"$rt_inttime |"
"$rt_az |"
"$rt_alt |"
"$rt_ra |"
"$rt_dec |"
"$rt_time |"
"$rt_date |"
"$rt_lat |"
"$rt_long |"
"$rt_height |"
"$rt_uptime |"
"$rt_slewrate |"
"$rt_status |"
"$rt_encerraz |"
"$rt_encerralt |"
"$rt_turnsaz |"
"$rt_turnsalt |"
"$rt_mspeedaz |"
"$rt_mspeedalt |"
"$rt_mcurrentaz |"
"$rt_mcurrentalt |"
"$rt_voltage0 |"
"$rt_voltage1 |"
"$rt_voltage2 |"
"$rt_voltage3 |"
"$rt_temp0 |"
"$rt_temp1 |"
"$rt_temp2 |"
"$weather_override |"
"$weather_windstatus |"
"$weather_humstatus |"
"$weather_rainstatus |"
"$weather_pressstatus |"
"$weather_tempstatus |"
"$weather_wind |"
"$weather_hum |"
"$weather_rain |"
"$weather_press |"
"$weather_temp |"
)

if [[ $rt_connection == "1" ]]; then
	mosquitto_pub --quiet -h $mqtt_host  -p $mqtt_port  -i $mqtt_id  -t $mqtt_topic  -m $(printf "%s" ${mqtt_props[@]})
	else
	mosquitto_pub --quiet -h $mqtt_host  -p $mqtt_port  -i $mqtt_id  -t $mqtt_topic  -m "$rt_connection||||||||||||||||||||||||||||||||||||||||||||||||||"
fi

done





