#!/bin/bash
# go to given equatorial coordinate and start guided datataking
# 30.08.2021 HGZ

# integration time for measurements
INT_TIME=1
# Timeout for waiting until RT reached set position in seconds
TIMEOUT=300
cmd_stop='indi_setprop "Pi Radiotelescope.TELESCOPE_ABORT_MOTION.ABORT=On"'

prop_ra='"Pi Radiotelescope.EQUATORIAL_EOD_COORD.RA"'
prop_dec='"Pi Radiotelescope.EQUATORIAL_EOD_COORD.DEC"'

# function goto_pos()
# go to given coordinates and wait until reached there
# goto_pos ra dec [timeout]
# ra,dec...coordinate to go
# timeout...optional timeout after which the function returns 
goto_pos()
{
        _ra=$1
        _dec=$2

        if [[ $(echo "scale=6; $1 < 0.0"|bc) -eq 1 ]]; then
                _ra=$(echo "scale=6; $1+24.0" | bc)
        elif [[ $(echo "scale=6; $1 > 24.0"|bc) -eq 1 ]]; then
                _ra=$(echo "scale=6; $1-24.0" | bc)
        fi

        tout="$TIMEOUT"
        if [ "$3" ] # Is parameter #3 !zero length?
   then
                tout="$3"
   fi

        # goto position
        echo -n $(indi_setprop "Pi Radiotelescope.EQUATORIAL_EOD_COORD.RA;DEC=$_ra;$_dec")
   sleep 1
   indi_eval -w -t $tout '"Pi Radiotelescope.SCOPE_STATUS.SCOPE_IDLE"==1 || "Pi Radiotelescope.SCOPE_STATUS.SCOPE_TRACKING"==1'
}

# exit handler to cleanly handle kill and term signals such as CTRL-C
# the tracking should be switched off when exiting the macro
function exit_handler()
{
	# switch off tracking
	echo -n $(indi_setprop "Pi Radiotelescope.TELESCOPE_TRACK_STATE.TRACK_OFF=On")
}

# main code
if [ $# -lt 3 ]; then
  echo "Go to equatorial coordinate and take measurement in a loop while tracking position (tracking scan)"
  echo "need at least 3 arguments (equatorial coordinate and filename) for measurement"
  echo "usage: $0 <ra> <dec> <file> [<int_time>]"
  echo " arguments:"
  echo "  ra, dec - coordinate in equatorial system (ra in hours, dec in degrees)"
  echo "  file - output file name"
  echo "  int_time - (optional) integration time of the measurements in seconds (default 1)"
  exit 1
fi

if [[ $(echo "scale=6; $1 >= 48.0"|bc) -eq 1 ]]; then
  echo "error: RA > 48h"
  echo "exiting"
  exit 2
fi

if [[ $(echo "scale=6; $1 < -24.0"|bc) -eq 1 ]]; then
  echo "error: RA < -24h"
  echo "exiting"
  exit 3
fi

if [[ $(echo "scale=6; $2 > 90.0"|bc) -eq 1 ]]; then
  echo "error: Dec exceeding north pole"
  echo "exiting"
  exit 4
fi

if [[ $(echo "scale=6; $2 < -40.0"|bc) -eq 1 ]]; then
  echo "error: Dec below -40deg"
  echo "exiting"
  exit 5
fi

if [ $# -gt 3 ]; then
  INT_TIME=$4
fi

ra=$1
dec=$2

echo $(eval $cmd_stop)

echo "ra = " $ra
echo "dec = " $dec

# switch on tracking
echo -n $(indi_setprop "Pi Radiotelescope.TELESCOPE_TRACK_STATE.TRACK_ON=On")

#install exit handler
trap exit_handler EXIT

#set integration time
echo -n $(indi_setprop -n "Pi Radiotelescope.INT_TIME.TIME=$INT_TIME")

goto_pos $ra $dec $TIMEOUT
echo "position reached"

# start data acquisition
echo -n $(./rt_ads1115_measurement.sh 0 $INT_TIME >> $3)
