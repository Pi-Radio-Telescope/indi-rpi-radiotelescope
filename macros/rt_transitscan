#!/bin/bash
# make transit scan at given horizontal coordinate
# 19/05/2025 HGZ/antrares

# TIMEOUT: timeout for waiting until RT reached set position in seconds
TIMEOUT=300
# INT_TIME: integration time and waiting time BEFORE each measurement in s
INT_TIME=1
# CAL_INTERVAL: nr. of cycles which have to be passed until a calibration is made, 
#               -1 disables calibration, 0 sets continous calibration 
CAL_INTERVAL=-1

cmd_stop='indi_setprop "Pi Radiotelescope.TELESCOPE_ABORT_MOTION.ABORT=On"'

prop_az='"Pi Radiotelescope.HORIZONTAL_EOD_COORD.AZ"'
prop_alt='"Pi Radiotelescope.HORIZONTAL_EOD_COORD.ALT"'

# function goto_pos()
# go to given coordinates and wait until reached there
# goto_pos az alt [timeout]
# az,alt...coordinate to go
# timeout...optional timeout after which the function returns 
goto_pos()
{
	_az=$1
	_alt=$2

	if [[ $(echo "scale=6; $1 < 0.0"|bc) -eq 1 ]]; then
		_az=$(echo "scale=6; $1+360.0" | bc)
	elif [[ $(echo "scale=6; $1 >= 360.0"|bc) -eq 1 ]]; then
		_az=$(echo "scale=6; $1-360.0" | bc)
	fi

	# goto position
	echo -n $(indi_setprop "Pi Radiotelescope.HORIZONTAL_EOD_COORD.AZ;ALT=$_az;$_alt")
	sleep 1
	indi_eval -w -t $TIMEOUT '"Pi Radiotelescope.SCOPE_STATUS.SCOPE_IDLE"==1'
}

# write one line of explanatory header to the file supplied by the first argument
write_file_header()
{
	echo "#  date      time      az      alt      ra     dec  adc_main adc_aux temp1 temp2 cal" >> $1
}

if [ $# -lt 3 ]; then
  echo "Go to horizontal coordinate and take measurement in a loop (transit scan)"
  echo "need at least 3 arguments (horizontal coordinate and filename) for measurement"
  echo "usage: rt_transitscan <az> <alt> <file> [<int_time>] [<cal_interval>]"
  echo " arguments:"
  echo "  az, alt   - coordinate in horizontal system"
  echo "  file      - output file name"
  echo "  int_time  - (optional) integration time of the measurements in seconds (default: 1)"
  echo "  cal_interval - (optional) number of datapoints after which a calibration is performed (default: -1 -> no calibration)"
  exit 1
fi

if [[ $(echo "scale=6; $2 < 0.0"|bc) -eq 1 ]]; then
  echo "error: alt below horizon"
  echo "exiting"
  exit 2
fi

if [[ $(echo "scale=6; $2 > 90.0"|bc) -eq 1 ]]; then
  echo "error: alt exceeding zenith"
  echo "exiting"
  exit 3
fi

if [ $# -gt 3 ]; then
  INT_TIME=$4
fi

if [ $# -gt 4 ]; then
  CAL_INTERVAL=$5
fi

az=$1
alt=$2

echo $(eval $cmd_stop)

echo "az = " $az
echo "alt = " $alt

# switch off tracking
echo -n $(indi_setprop "Pi Radiotelescope.TELESCOPE_TRACK_STATE.TRACK_OFF=On")

# goto measurement position
goto_pos $az $alt

# write first line with explanation of columns as comment to data file
write_file_header $3

# start data acquisition, stay in endless loop mode
echo -n $(rt_ads1115_measurement 0 $INT_TIME $CAL_INTERVAL >> $3)
